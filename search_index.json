[
["index.html", "Baseball Analytics Workshop (Morning Session) Chapter 1 Software Installation 1.1 Install R 1.2 RStudio", " Baseball Analytics Workshop (Morning Session) Charles Redmond 2019-04-06 Chapter 1 Software Installation To set up for this morning’s session, we will need to install both R and RStudio 1.1 Install R The website for the R Project can be found here: https://www.r-project.org/. Under Download, click CRAN, or simply go here: https://cran.r-project.org/mirrors.html. Choose a location close to you. Let’s go with Case Western. Scroll down to find the Case Western link, or simply go here: https://cran.case.edu/. 1.1.1 Windows If you have Windows, follow the download link for Windows, then choose the base distribution link, and find finally the Download R 3.5.3 for Windows link. Follow the installation instructions. We will be around to help you. 1.1.2 Mac If you have a Mac, follow the download link for Mac and find the R-3.5.3.pkg link. Follow the installation instructions. We will be around to help you. 1.2 RStudio The website for RStudio can be found here: https://www.rstudio.com/. Click the Download RStudio link, or simply go here: https://www.rstudio.com/products/rstudio/download/. Scroll down and find the installer for your operating system. Follow the installation instructions. We will be around to help. "],
["intro-to-rstudio.html", "Chapter 2 Intro to RStudio", " Chapter 2 Intro to RStudio When you launch RStudio, it should look something like this: There you can see three panels. The panel on the left is called the console. If you click the panel icon in the upper right-hand corner of the console, it will open a fourth panel, in the upper left, where we will write our scripts: If you ever wish to clear the console, you can press control-l: "],
["install-lahman.html", "Chapter 3 Install Lahman", " Chapter 3 Install Lahman The first package we will need is the Lahman package, which will give us access to an extensive database of baseball records. To install the Lahman package, type the following in the console and press enter: We will be around to help. After installing the Lahman package, you will need to load it with the library function: "],
["a-look-at-the-tables.html", "Chapter 4 A Look At The Tables", " Chapter 4 A Look At The Tables To see all of the tables available in the Lahman database, type the following in the console, and a list of them will appear above in the source panel: For this session, we will use the Batting table and the Master table, but there are many more that you can explore. Let’s take a look at the Batting table. To see the first few records in the table, you can simply type Batting in the console and press enter. But if you want to control how many records you see, it is best to use the head function: head(Batting,10) ## playerID yearID stint teamID lgID G AB R H X2B X3B HR RBI SB CS BB ## 1 abercda01 1871 1 TRO NA 1 4 0 0 0 0 0 0 0 0 0 ## 2 addybo01 1871 1 RC1 NA 25 118 30 32 6 0 0 13 8 1 4 ## 3 allisar01 1871 1 CL1 NA 29 137 28 40 4 5 0 19 3 1 2 ## 4 allisdo01 1871 1 WS3 NA 27 133 28 44 10 2 2 27 1 1 0 ## 5 ansonca01 1871 1 RC1 NA 25 120 29 39 11 3 0 16 6 2 2 ## 6 armstbo01 1871 1 FW1 NA 12 49 9 11 2 1 0 5 0 1 0 ## 7 barkeal01 1871 1 RC1 NA 1 4 0 1 0 0 0 2 0 0 1 ## 8 barnero01 1871 1 BS1 NA 31 157 66 63 10 9 0 34 11 6 13 ## 9 barrebi01 1871 1 FW1 NA 1 5 1 1 1 0 0 1 0 0 0 ## 10 barrofr01 1871 1 BS1 NA 18 86 13 13 2 1 0 11 1 0 0 ## SO IBB HBP SH SF GIDP ## 1 0 NA NA NA NA NA ## 2 0 NA NA NA NA NA ## 3 5 NA NA NA NA NA ## 4 2 NA NA NA NA NA ## 5 1 NA NA NA NA NA ## 6 1 NA NA NA NA NA ## 7 0 NA NA NA NA NA ## 8 1 NA NA NA NA NA ## 9 0 NA NA NA NA NA ## 10 0 NA NA NA NA NA Here we are looking at the first 10 records of the Batting table. Each player has at least one record for each year he played. If he played for more than one team in a year, he has multiple records for that year, one for each team. By reading the column names, you can see what statistics are available. And you can see that the data goes back to 1871. For the most part, we will be interested in the playerID, yearID, teamID, and HR columns. Before moving on, let’s take a look at the Master table. head(Master,10) ## playerID birthYear birthMonth birthDay birthCountry birthState ## 1 aardsda01 1981 12 27 USA CO ## 2 aaronha01 1934 2 5 USA AL ## 3 aaronto01 1939 8 5 USA AL ## 4 aasedo01 1954 9 8 USA CA ## 5 abadan01 1972 8 25 USA FL ## 6 abadfe01 1985 12 17 D.R. La Romana ## 7 abadijo01 1850 11 4 USA PA ## 8 abbated01 1877 4 15 USA PA ## 9 abbeybe01 1869 11 11 USA VT ## 10 abbeych01 1866 10 14 USA NE ## birthCity deathYear deathMonth deathDay deathCountry deathState ## 1 Denver NA NA NA &lt;NA&gt; &lt;NA&gt; ## 2 Mobile NA NA NA &lt;NA&gt; &lt;NA&gt; ## 3 Mobile 1984 8 16 USA GA ## 4 Orange NA NA NA &lt;NA&gt; &lt;NA&gt; ## 5 Palm Beach NA NA NA &lt;NA&gt; &lt;NA&gt; ## 6 La Romana NA NA NA &lt;NA&gt; &lt;NA&gt; ## 7 Philadelphia 1905 5 17 USA NJ ## 8 Latrobe 1957 1 6 USA FL ## 9 Essex 1962 6 11 USA VT ## 10 Falls City 1926 4 27 USA CA ## deathCity nameFirst nameLast nameGiven weight height ## 1 &lt;NA&gt; David Aardsma David Allan 215 75 ## 2 &lt;NA&gt; Hank Aaron Henry Louis 180 72 ## 3 Atlanta Tommie Aaron Tommie Lee 190 75 ## 4 &lt;NA&gt; Don Aase Donald William 190 75 ## 5 &lt;NA&gt; Andy Abad Fausto Andres 184 73 ## 6 &lt;NA&gt; Fernando Abad Fernando Antonio 220 73 ## 7 Pemberton John Abadie John W. 192 72 ## 8 Fort Lauderdale Ed Abbaticchio Edward James 170 71 ## 9 Colchester Bert Abbey Bert Wood 175 71 ## 10 San Francisco Charlie Abbey Charles S. 169 68 ## bats throws debut finalGame retroID bbrefID deathDate ## 1 R R 2004-04-06 2015-08-23 aardd001 aardsda01 &lt;NA&gt; ## 2 R R 1954-04-13 1976-10-03 aaroh101 aaronha01 &lt;NA&gt; ## 3 R R 1962-04-10 1971-09-26 aarot101 aaronto01 1984-08-16 ## 4 R R 1977-07-26 1990-10-03 aased001 aasedo01 &lt;NA&gt; ## 5 L L 2001-09-10 2006-04-13 abada001 abadan01 &lt;NA&gt; ## 6 L L 2010-07-28 2016-09-25 abadf001 abadfe01 &lt;NA&gt; ## 7 R R 1875-04-26 1875-06-10 abadj101 abadijo01 1905-05-17 ## 8 R R 1897-09-04 1910-09-15 abbae101 abbated01 1957-01-06 ## 9 R R 1892-06-14 1896-09-23 abbeb101 abbeybe01 1962-06-11 ## 10 L L 1893-08-16 1897-08-19 abbec101 abbeych01 1926-04-27 ## birthDate ## 1 1981-12-27 ## 2 1934-02-05 ## 3 1939-08-05 ## 4 1954-09-08 ## 5 1972-08-25 ## 6 1985-12-17 ## 7 1850-11-04 ## 8 1877-04-15 ## 9 1869-11-11 ## 10 1866-10-14 Every player in baseball history, going back to 1871, has exactly one record in the Master table. It is here where you can find biographical information about the players, such as a player’s birthday, height, weight, etc. We will be interested, primarily, in the playerID, nameFirst, and nameLast columns. If there is time, we may also take a look at the Teams table. "],
["install-dplyr.html", "Chapter 5 Install dplyr", " Chapter 5 Install dplyr We will need the dplyr package to extract information from the tables in the Lahman database. To install dplyr, type the following in the console and press enter: After installing dplyr, load the package by typing the following in the console: library(dplyr) "],
["selecting-filtering-and-arranging.html", "Chapter 6 Selecting, Filtering, and Arranging 6.1 Select 6.2 Scripts 6.3 Filter 6.4 Arrange", " Chapter 6 Selecting, Filtering, and Arranging 6.1 Select With dplyr, instead of seeing every column from a table, we may select the particular columns we are interested in. Type the following in the console and press enter: bdat &lt;- Batting %&gt;% select(playerID,yearID,teamID,HR) Now type head(bdat,10) ## playerID yearID teamID HR ## 1 abercda01 1871 TRO 0 ## 2 addybo01 1871 RC1 0 ## 3 allisar01 1871 CL1 0 ## 4 allisdo01 1871 WS3 2 ## 5 ansonca01 1871 RC1 0 ## 6 armstbo01 1871 FW1 0 ## 7 barkeal01 1871 RC1 0 ## 8 barnero01 1871 BS1 0 ## 9 barrebi01 1871 FW1 0 ## 10 barrofr01 1871 BS1 0 Let’s see what is happening here. The select verb of dplyr allows you to select the columns you want to see. However, we need to indicate the data frame from which we wish to select. (What we have been calling “tables” are actually called “data frames” in R, so we will use that terminology from now on.) We use the symbol %% to pipe the Batting data frame into the select function. We store the result into a variable we have called bdat, a generic variable name for baseball data. bdat is now a data frame with just the four columns we have chosen. We view the first few rows of bdat with the head function. 6.2 Scripts It’s time now to make use of the source panel. We will write our code in the source panel and then run it in the console. Let’s do the example above again, but we will try it this new way. Type the following in the source panel: To run your code, select it and then click the Run icon: From now on, we will run all of our code this way. 6.3 Filter You will almost always want to see a subset of the records in a data frame intead of all of them. For instance, we may wish to see just the records where the HR value is 50 or more. For this, we can use the filter verb of dplyr. Type this code in the source panel and run it: bdat &lt;- Batting %&gt;% filter(HR &gt;= 50) %&gt;% select(playerID,yearID,teamID,HR) bdat ## playerID yearID teamID HR ## 1 ruthba01 1920 NYA 54 ## 2 ruthba01 1921 NYA 59 ## 3 ruthba01 1927 NYA 60 ## 4 ruthba01 1928 NYA 54 ## 5 wilsoha01 1930 CHN 56 ## 6 foxxji01 1932 PHA 58 ## 7 foxxji01 1938 BOS 50 ## 8 greenha01 1938 DET 58 ## 9 kinerra01 1947 PIT 51 ## 10 mizejo01 1947 NY1 51 ## 11 kinerra01 1949 PIT 54 ## 12 mayswi01 1955 NY1 51 ## 13 mantlmi01 1956 NYA 52 ## 14 mantlmi01 1961 NYA 54 ## 15 marisro01 1961 NYA 61 ## 16 mayswi01 1965 SFN 52 ## 17 fostege01 1977 CIN 52 ## 18 fieldce01 1990 DET 51 ## 19 belleal01 1995 CLE 50 ## 20 anderbr01 1996 BAL 50 ## 21 mcgwima01 1996 OAK 52 ## 22 griffke02 1997 SEA 56 ## 23 griffke02 1998 SEA 56 ## 24 mcgwima01 1998 SLN 70 ## 25 sosasa01 1998 CHN 66 ## 26 vaughgr01 1998 SDN 50 ## 27 mcgwima01 1999 SLN 65 ## 28 sosasa01 1999 CHN 63 ## 29 sosasa01 2000 CHN 50 ## 30 bondsba01 2001 SFN 73 ## 31 gonzalu01 2001 ARI 57 ## 32 rodrial01 2001 TEX 52 ## 33 sosasa01 2001 CHN 64 ## 34 rodrial01 2002 TEX 57 ## 35 thomeji01 2002 CLE 52 ## 36 jonesan01 2005 ATL 51 ## 37 howarry01 2006 PHI 58 ## 38 ortizda01 2006 BOS 54 ## 39 fieldpr01 2007 MIL 50 ## 40 rodrial01 2007 NYA 54 ## 41 bautijo02 2010 TOR 54 ## 42 davisch02 2013 BAL 53 Note how we filter and then pipe the result into select. Note also that we did not use the head function to view bdat, since bdat is not large and therefore easy to view in its entirety. There is a point worth highlighting here. Mark McGwire had a monster year in 1997, with 58 homeruns. His 1997 year, however, does not appear in our output above. Why is that? It is because he was traded mid-season from the A’s to the Cardinals. He therefore has two 1997 records in the data frame, one with 34 homeruns for the A’s, and another with 24 homeruns for the Cardinals. 6.4 Arrange It might be nice to see the output above in a particular order, say with the most homeruns (Barry Bonds) at the top. You can use the arrange verb for this. Try the following: bdat &lt;- Batting %&gt;% filter(HR &gt;= 50) %&gt;% select(playerID,yearID,teamID,HR) %&gt;% arrange(HR) bdat ## playerID yearID teamID HR ## 1 foxxji01 1938 BOS 50 ## 2 belleal01 1995 CLE 50 ## 3 anderbr01 1996 BAL 50 ## 4 vaughgr01 1998 SDN 50 ## 5 sosasa01 2000 CHN 50 ## 6 fieldpr01 2007 MIL 50 ## 7 kinerra01 1947 PIT 51 ## 8 mizejo01 1947 NY1 51 ## 9 mayswi01 1955 NY1 51 ## 10 fieldce01 1990 DET 51 ## 11 jonesan01 2005 ATL 51 ## 12 mantlmi01 1956 NYA 52 ## 13 mayswi01 1965 SFN 52 ## 14 fostege01 1977 CIN 52 ## 15 mcgwima01 1996 OAK 52 ## 16 rodrial01 2001 TEX 52 ## 17 thomeji01 2002 CLE 52 ## 18 davisch02 2013 BAL 53 ## 19 ruthba01 1920 NYA 54 ## 20 ruthba01 1928 NYA 54 ## 21 kinerra01 1949 PIT 54 ## 22 mantlmi01 1961 NYA 54 ## 23 ortizda01 2006 BOS 54 ## 24 rodrial01 2007 NYA 54 ## 25 bautijo02 2010 TOR 54 ## 26 wilsoha01 1930 CHN 56 ## 27 griffke02 1997 SEA 56 ## 28 griffke02 1998 SEA 56 ## 29 gonzalu01 2001 ARI 57 ## 30 rodrial01 2002 TEX 57 ## 31 foxxji01 1932 PHA 58 ## 32 greenha01 1938 DET 58 ## 33 howarry01 2006 PHI 58 ## 34 ruthba01 1921 NYA 59 ## 35 ruthba01 1927 NYA 60 ## 36 marisro01 1961 NYA 61 ## 37 sosasa01 1999 CHN 63 ## 38 sosasa01 2001 CHN 64 ## 39 mcgwima01 1999 SLN 65 ## 40 sosasa01 1998 CHN 66 ## 41 mcgwima01 1998 SLN 70 ## 42 bondsba01 2001 SFN 73 As you can see, this is almost what we want, except that we want the homeruns in descending order. You can use the desc function for this: bdat &lt;- Batting %&gt;% filter(HR &gt;= 50) %&gt;% select(playerID,yearID,teamID,HR) %&gt;% arrange(desc(HR)) bdat ## playerID yearID teamID HR ## 1 bondsba01 2001 SFN 73 ## 2 mcgwima01 1998 SLN 70 ## 3 sosasa01 1998 CHN 66 ## 4 mcgwima01 1999 SLN 65 ## 5 sosasa01 2001 CHN 64 ## 6 sosasa01 1999 CHN 63 ## 7 marisro01 1961 NYA 61 ## 8 ruthba01 1927 NYA 60 ## 9 ruthba01 1921 NYA 59 ## 10 foxxji01 1932 PHA 58 ## 11 greenha01 1938 DET 58 ## 12 howarry01 2006 PHI 58 ## 13 gonzalu01 2001 ARI 57 ## 14 rodrial01 2002 TEX 57 ## 15 wilsoha01 1930 CHN 56 ## 16 griffke02 1997 SEA 56 ## 17 griffke02 1998 SEA 56 ## 18 ruthba01 1920 NYA 54 ## 19 ruthba01 1928 NYA 54 ## 20 kinerra01 1949 PIT 54 ## 21 mantlmi01 1961 NYA 54 ## 22 ortizda01 2006 BOS 54 ## 23 rodrial01 2007 NYA 54 ## 24 bautijo02 2010 TOR 54 ## 25 davisch02 2013 BAL 53 ## 26 mantlmi01 1956 NYA 52 ## 27 mayswi01 1965 SFN 52 ## 28 fostege01 1977 CIN 52 ## 29 mcgwima01 1996 OAK 52 ## 30 rodrial01 2001 TEX 52 ## 31 thomeji01 2002 CLE 52 ## 32 kinerra01 1947 PIT 51 ## 33 mizejo01 1947 NY1 51 ## 34 mayswi01 1955 NY1 51 ## 35 fieldce01 1990 DET 51 ## 36 jonesan01 2005 ATL 51 ## 37 foxxji01 1938 BOS 50 ## 38 belleal01 1995 CLE 50 ## 39 anderbr01 1996 BAL 50 ## 40 vaughgr01 1998 SDN 50 ## 41 sosasa01 2000 CHN 50 ## 42 fieldpr01 2007 MIL 50 "],
["grouping.html", "Chapter 7 Grouping 7.1 The Basics 7.2 Exercise", " Chapter 7 Grouping 7.1 The Basics Babe Ruth played 22 seasons and therefore has 22 records in the Batting data frame. Each record indicates how many homeruns he hit that particular year. We might, however, be interested in finding out how many homeruns he hit over his entire career. To do this, we could group his 22 records together and then collapse them into one record by summing his homerun values. Let’s first take a look at each of his seasons. We first have to filter so that we are looking just at his records. Then we will select his playerID, teamID, yearID, and HR columns. bdat &lt;- Batting %&gt;% filter(playerID == &quot;ruthba01&quot;) %&gt;% select(playerID,teamID,yearID,HR) bdat ## playerID teamID yearID HR ## 1 ruthba01 BOS 1914 0 ## 2 ruthba01 BOS 1915 4 ## 3 ruthba01 BOS 1916 3 ## 4 ruthba01 BOS 1917 2 ## 5 ruthba01 BOS 1918 11 ## 6 ruthba01 BOS 1919 29 ## 7 ruthba01 NYA 1920 54 ## 8 ruthba01 NYA 1921 59 ## 9 ruthba01 NYA 1922 35 ## 10 ruthba01 NYA 1923 41 ## 11 ruthba01 NYA 1924 46 ## 12 ruthba01 NYA 1925 25 ## 13 ruthba01 NYA 1926 47 ## 14 ruthba01 NYA 1927 60 ## 15 ruthba01 NYA 1928 54 ## 16 ruthba01 NYA 1929 46 ## 17 ruthba01 NYA 1930 49 ## 18 ruthba01 NYA 1931 46 ## 19 ruthba01 NYA 1932 41 ## 20 ruthba01 NYA 1933 34 ## 21 ruthba01 NYA 1934 22 ## 22 ruthba01 BSN 1935 6 (Note the “double equals” sign in the filter function above. ) Now we would like to collapse these 22 records into one by summing the HR values. You can use the group_by and summarize verbs of dplyr to do this. We want to group by playerID. This is what is common to all of Babe Ruth’s records. bdat &lt;- Batting %&gt;% filter(playerID == &quot;ruthba01&quot;) %&gt;% group_by(playerID) %&gt;% summarize(sum(HR)) bdat ## # A tibble: 1 x 2 ## playerID `sum(HR)` ## &lt;chr&gt; &lt;int&gt; ## 1 ruthba01 714 Note that there is no reason to select here. We automatically get the column we are grouping by and the column we are summarizing. Note also that the result, bdat, is now what is called a tibble. To keep things simple, let’s continue to produce data frames. Run this again, with the following change: bdat &lt;- Batting %&gt;% filter(playerID == &quot;ruthba01&quot;) %&gt;% group_by(playerID) %&gt;% summarize(sum(HR)) data.frame(bdat) ## playerID sum.HR. ## 1 ruthba01 714 So, we have Babe Ruth’s 714 homeruns. The column name, however, is not so great. Let’s rename it “careerHR”. Make the following change: bdat &lt;- Batting %&gt;% filter(playerID == &quot;ruthba01&quot;) %&gt;% group_by(playerID) %&gt;% summarize(careerHR = sum(HR)) data.frame(bdat) ## playerID careerHR ## 1 ruthba01 714 Of course, we could summarize the homerun column in a different way. We could, for instance, find the maximum number of homeruns Babe Ruth hit in a season: bdat &lt;- Batting %&gt;% filter(playerID == &quot;ruthba01&quot;) %&gt;% group_by(playerID) %&gt;% summarize(maxHR = max(HR)) data.frame(bdat) ## playerID maxHR ## 1 ruthba01 60 7.2 Exercise Generate the list of players who hit 500 or more career homeruns. Have the players with the most homeruns at the top of the list. Solution bdat &lt;- Batting %&gt;% group_by(playerID) %&gt;% summarize(careerHR = sum(HR)) %&gt;% filter(careerHR &gt;= 500) %&gt;% arrange(desc(careerHR)) data.frame(bdat) ## playerID careerHR ## 1 bondsba01 762 ## 2 aaronha01 755 ## 3 ruthba01 714 ## 4 rodrial01 696 ## 5 mayswi01 660 ## 6 griffke02 630 ## 7 thomeji01 612 ## 8 sosasa01 609 ## 9 pujolal01 591 ## 10 robinfr02 586 ## 11 mcgwima01 583 ## 12 killeha01 573 ## 13 palmera01 569 ## 14 jacksre01 563 ## 15 ramirma02 555 ## 16 schmimi01 548 ## 17 ortizda01 541 ## 18 mantlmi01 536 ## 19 foxxji01 534 ## 20 mccovwi01 521 ## 21 thomafr04 521 ## 22 willite01 521 ## 23 bankser01 512 ## 24 matheed01 512 ## 25 ottme01 511 ## 26 sheffga01 509 ## 27 murraed02 504 Note that the filtering had to be done AFTER the grouping and summarizing. "],
["joins.html", "Chapter 8 Joins 8.1 The Basics 8.2 Exercise 1 8.3 Exercise 2", " Chapter 8 Joins 8.1 The Basics In chapter 6 we generated the list of records where the homerun total was 50 or more. Only each player’s ID was indicated, however. It would be nice to have their names as well. But this information is not in the Batting table, but rather in the Master table. We will therefore have to join the Batting and the Master table. Let’s begin by generating again the list from chapter 6: HR_df &lt;- Batting %&gt;% filter(HR &gt;= 50) %&gt;% select(playerID,yearID,teamID,HR) data.frame(HR_df) ## playerID yearID teamID HR ## 1 ruthba01 1920 NYA 54 ## 2 ruthba01 1921 NYA 59 ## 3 ruthba01 1927 NYA 60 ## 4 ruthba01 1928 NYA 54 ## 5 wilsoha01 1930 CHN 56 ## 6 foxxji01 1932 PHA 58 ## 7 foxxji01 1938 BOS 50 ## 8 greenha01 1938 DET 58 ## 9 kinerra01 1947 PIT 51 ## 10 mizejo01 1947 NY1 51 ## 11 kinerra01 1949 PIT 54 ## 12 mayswi01 1955 NY1 51 ## 13 mantlmi01 1956 NYA 52 ## 14 mantlmi01 1961 NYA 54 ## 15 marisro01 1961 NYA 61 ## 16 mayswi01 1965 SFN 52 ## 17 fostege01 1977 CIN 52 ## 18 fieldce01 1990 DET 51 ## 19 belleal01 1995 CLE 50 ## 20 anderbr01 1996 BAL 50 ## 21 mcgwima01 1996 OAK 52 ## 22 griffke02 1997 SEA 56 ## 23 griffke02 1998 SEA 56 ## 24 mcgwima01 1998 SLN 70 ## 25 sosasa01 1998 CHN 66 ## 26 vaughgr01 1998 SDN 50 ## 27 mcgwima01 1999 SLN 65 ## 28 sosasa01 1999 CHN 63 ## 29 sosasa01 2000 CHN 50 ## 30 bondsba01 2001 SFN 73 ## 31 gonzalu01 2001 ARI 57 ## 32 rodrial01 2001 TEX 52 ## 33 sosasa01 2001 CHN 64 ## 34 rodrial01 2002 TEX 57 ## 35 thomeji01 2002 CLE 52 ## 36 jonesan01 2005 ATL 51 ## 37 howarry01 2006 PHI 58 ## 38 ortizda01 2006 BOS 54 ## 39 fieldpr01 2007 MIL 50 ## 40 rodrial01 2007 NYA 54 ## 41 bautijo02 2010 TOR 54 ## 42 davisch02 2013 BAL 53 Here I did not bother with arranging, and I renamed the data frame. Now let’s pull playerID, nameFirst, and nameLast from the Master table: playerNames_df &lt;- Master %&gt;% select(playerID,nameFirst,nameLast) head(playerNames_df) ## playerID nameFirst nameLast ## 1 aardsda01 David Aardsma ## 2 aaronha01 Hank Aaron ## 3 aaronto01 Tommie Aaron ## 4 aasedo01 Don Aase ## 5 abadan01 Andy Abad ## 6 abadfe01 Fernando Abad I am showing, here, just the top of the playerNames_df data frame. We can now join playerNames_df and HR_df together: result &lt;- inner_join(playerNames_df,HR_df,by = c(&quot;playerID&quot;=&quot;playerID&quot;)) %&gt;% select(nameFirst,nameLast,yearID,teamID,HR) %&gt;% arrange(desc(HR)) data.frame(result) ## nameFirst nameLast yearID teamID HR ## 1 Barry Bonds 2001 SFN 73 ## 2 Mark McGwire 1998 SLN 70 ## 3 Sammy Sosa 1998 CHN 66 ## 4 Mark McGwire 1999 SLN 65 ## 5 Sammy Sosa 2001 CHN 64 ## 6 Sammy Sosa 1999 CHN 63 ## 7 Roger Maris 1961 NYA 61 ## 8 Babe Ruth 1927 NYA 60 ## 9 Babe Ruth 1921 NYA 59 ## 10 Jimmie Foxx 1932 PHA 58 ## 11 Hank Greenberg 1938 DET 58 ## 12 Ryan Howard 2006 PHI 58 ## 13 Luis Gonzalez 2001 ARI 57 ## 14 Alex Rodriguez 2002 TEX 57 ## 15 Ken Griffey 1997 SEA 56 ## 16 Ken Griffey 1998 SEA 56 ## 17 Hack Wilson 1930 CHN 56 ## 18 Jose Bautista 2010 TOR 54 ## 19 Ralph Kiner 1949 PIT 54 ## 20 Mickey Mantle 1961 NYA 54 ## 21 David Ortiz 2006 BOS 54 ## 22 Alex Rodriguez 2007 NYA 54 ## 23 Babe Ruth 1920 NYA 54 ## 24 Babe Ruth 1928 NYA 54 ## 25 Chris Davis 2013 BAL 53 ## 26 George Foster 1977 CIN 52 ## 27 Mickey Mantle 1956 NYA 52 ## 28 Willie Mays 1965 SFN 52 ## 29 Mark McGwire 1996 OAK 52 ## 30 Alex Rodriguez 2001 TEX 52 ## 31 Jim Thome 2002 CLE 52 ## 32 Cecil Fielder 1990 DET 51 ## 33 Andruw Jones 2005 ATL 51 ## 34 Ralph Kiner 1947 PIT 51 ## 35 Willie Mays 1955 NY1 51 ## 36 Johnny Mize 1947 NY1 51 ## 37 Brady Anderson 1996 BAL 50 ## 38 Albert Belle 1995 CLE 50 ## 39 Prince Fielder 2007 MIL 50 ## 40 Jimmie Foxx 1938 BOS 50 ## 41 Sammy Sosa 2000 CHN 50 ## 42 Greg Vaughn 1998 SDN 50 Note that I decided not to select the playerID here. 8.2 Exercise 1 Include the team name in the list above. Solution First, let’s generate a teamNames_df: teamNames_df &lt;- Teams %&gt;% select(teamID,yearID,name) head(teamNames_df) ## teamID yearID name ## 1 BS1 1871 Boston Red Stockings ## 2 CH1 1871 Chicago White Stockings ## 3 CL1 1871 Cleveland Forest Citys ## 4 FW1 1871 Fort Wayne Kekiongas ## 5 NY2 1871 New York Mutuals ## 6 PH1 1871 Philadelphia Athletics Above we are finding the name associated with each teamID for each year. Now we join: result2 &lt;- inner_join(teamNames_df,result,by=c(&quot;teamID&quot;=&quot;teamID&quot;,&quot;yearID&quot;=&quot;yearID&quot;)) %&gt;% select(nameFirst,nameLast,name,yearID,HR) %&gt;% arrange(desc(HR)) data.frame(result2) ## nameFirst nameLast name yearID HR ## 1 Barry Bonds San Francisco Giants 2001 73 ## 2 Mark McGwire St. Louis Cardinals 1998 70 ## 3 Sammy Sosa Chicago Cubs 1998 66 ## 4 Mark McGwire St. Louis Cardinals 1999 65 ## 5 Sammy Sosa Chicago Cubs 2001 64 ## 6 Sammy Sosa Chicago Cubs 1999 63 ## 7 Roger Maris New York Yankees 1961 61 ## 8 Babe Ruth New York Yankees 1927 60 ## 9 Babe Ruth New York Yankees 1921 59 ## 10 Jimmie Foxx Philadelphia Athletics 1932 58 ## 11 Hank Greenberg Detroit Tigers 1938 58 ## 12 Ryan Howard Philadelphia Phillies 2006 58 ## 13 Luis Gonzalez Arizona Diamondbacks 2001 57 ## 14 Alex Rodriguez Texas Rangers 2002 57 ## 15 Hack Wilson Chicago Cubs 1930 56 ## 16 Ken Griffey Seattle Mariners 1997 56 ## 17 Ken Griffey Seattle Mariners 1998 56 ## 18 Babe Ruth New York Yankees 1920 54 ## 19 Babe Ruth New York Yankees 1928 54 ## 20 Ralph Kiner Pittsburgh Pirates 1949 54 ## 21 Mickey Mantle New York Yankees 1961 54 ## 22 David Ortiz Boston Red Sox 2006 54 ## 23 Alex Rodriguez New York Yankees 2007 54 ## 24 Jose Bautista Toronto Blue Jays 2010 54 ## 25 Chris Davis Baltimore Orioles 2013 53 ## 26 Mickey Mantle New York Yankees 1956 52 ## 27 Willie Mays San Francisco Giants 1965 52 ## 28 George Foster Cincinnati Reds 1977 52 ## 29 Mark McGwire Oakland Athletics 1996 52 ## 30 Alex Rodriguez Texas Rangers 2001 52 ## 31 Jim Thome Cleveland Indians 2002 52 ## 32 Johnny Mize New York Giants 1947 51 ## 33 Ralph Kiner Pittsburgh Pirates 1947 51 ## 34 Willie Mays New York Giants 1955 51 ## 35 Cecil Fielder Detroit Tigers 1990 51 ## 36 Andruw Jones Atlanta Braves 2005 51 ## 37 Jimmie Foxx Boston Red Sox 1938 50 ## 38 Albert Belle Cleveland Indians 1995 50 ## 39 Brady Anderson Baltimore Orioles 1996 50 ## 40 Greg Vaughn San Diego Padres 1998 50 ## 41 Sammy Sosa Chicago Cubs 2000 50 ## 42 Prince Fielder Milwaukee Brewers 2007 50 It takes a little thought to see why we had to join by both teamID and yearID. If we had not, Babe Ruth’s 1927 record, for instance, would have been joined with every record in the Teams table with a New York Yankees ID. 8.3 Exercise 2 Generate the list of players who have 500 or more career homeruns, with their first and last names included instead of their playerID’s. Solution HR_df &lt;- Batting %&gt;% group_by(playerID) %&gt;% summarize(careerHR = sum(HR)) %&gt;% filter(careerHR &gt;= 500) playerNames_df &lt;- Master %&gt;% select(playerID,nameFirst,nameLast) result &lt;- inner_join(playerNames_df,HR_df,by=c(&quot;playerID&quot;=&quot;playerID&quot;)) %&gt;% select(nameFirst,nameLast,careerHR) %&gt;% arrange(desc(careerHR)) data.frame(result) ## nameFirst nameLast careerHR ## 1 Barry Bonds 762 ## 2 Hank Aaron 755 ## 3 Babe Ruth 714 ## 4 Alex Rodriguez 696 ## 5 Willie Mays 660 ## 6 Ken Griffey 630 ## 7 Jim Thome 612 ## 8 Sammy Sosa 609 ## 9 Albert Pujols 591 ## 10 Frank Robinson 586 ## 11 Mark McGwire 583 ## 12 Harmon Killebrew 573 ## 13 Rafael Palmeiro 569 ## 14 Reggie Jackson 563 ## 15 Manny Ramirez 555 ## 16 Mike Schmidt 548 ## 17 David Ortiz 541 ## 18 Mickey Mantle 536 ## 19 Jimmie Foxx 534 ## 20 Willie McCovey 521 ## 21 Frank Thomas 521 ## 22 Ted Williams 521 ## 23 Ernie Banks 512 ## 24 Eddie Mathews 512 ## 25 Mel Ott 511 ## 26 Gary Sheffield 509 ## 27 Eddie Murray 504 "]
]
